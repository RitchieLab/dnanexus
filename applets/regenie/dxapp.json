{
  "name": "regenie",
  "title": "regenie",
  "summary": "regenie",
  "dxapi": "1.0.0",
  "version": "0.1.0",
  "inputSpec": [
    {
      "name": "run_step_1",
      "label": "Run step 1",
      "class": "boolean",
      "default": true,
      "help": "Run regenie step 1 to generate predictions; if disabled, a _pred.list predictions file must be supplied"
    },
    {
      "name": "run_step_2",
      "label": "Run step 2",
      "class": "boolean",
      "default": true,
      "help": "Run regenie step 2 to run association tests; if disabled, no .regenie output file will be produced"
    },
    {
      "name": "input_bed",
      "label": ".bed genotypes file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.bed"
      ],
      "help": "Input genotype data in PLINK .bed format"
    },
    {
      "name": "input_bim",
      "label": "(Conditional) .bim variants file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.bim"
      ],
      "help": "Input variants data in PLINK .bim format, corresponding to the .bed file"
    },
    {
      "name": "input_fam",
      "label": "(Conditional) .fam samples file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.fam"
      ],
      "help": "Input samples data in PLINK .fam format, corresponding to the .bed file"
    },
    {
      "name": "input_bgen",
      "label": ".bgen genotypes file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.bgen"
      ],
      "help": "Input genotype data in .bgen format"
    },
    {
      "name": "input_sample",
      "label": "(Conditional) .sample file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.sample"
      ],
      "help": "Input samples data in .sample format, corresponding to the .bgen file"
    },
    {
      "name": "input_keep_samples",
      "label": "(Optional) Sample include file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.txt"
      ],
      "help": "File listing samples to include in the analysis; if omitted, all samples will be included"
    },
    {
      "name": "input_remove_samples",
      "label": "(Optional) Sample exclude file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.txt"
      ],
      "help": "File listing samples to exclude from the analysis; if omitted, no samples will be excluded"
    },
    {
      "name": "input_keep_variants",
      "label": "(Optional) Variant include file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.txt"
      ],
      "help": "File listing variants to include in the analysis; if omitted, all variants will be included"
    },
    {
      "name": "input_remove_variants",
      "label": "(Optional) Variant exclude file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.txt"
      ],
      "help": "File listing variants to exclude from the analysis; if omitted, no variants will be excluded"
    },
    {
      "name": "input_pred",
      "label": "(Conditional) Predictions file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.list"
      ],
      "help": "Predictions file generated by step 1; ignored if running step 1, required if only running step 2"
    },
    {
      "name": "input_pheno",
      "label": "Phenotypes file",
      "class": "file",
      "optional": false,
      "patterns": [
        "*.txt"
      ],
      "help": "Input phenotypes data"
    },
    {
      "name": "pheno_columns",
      "label": "(Optional) Phenotype(s)",
      "class": "string",
      "optional": true,
      "help": "Comma-separated list of phenotypes to include in the analysis; if blank, all phenotypes will be included"
    },
    {
      "name": "input_covar",
      "label": "Covariates file",
      "class": "file",
      "optional": false,
      "patterns": [
        "*.txt"
      ],
      "help": "Input covariates data"
    },
    {
      "name": "covar_columns",
      "label": "(Optional) Covariate(s)",
      "class": "string",
      "optional": true,
      "help": "Comma-separated list of covariates to include in the analysis; if blank, all covariates will be included"
    },
    {
      "name": "drop_missing_covars",
      "label": "Drop samples with missing covars",
      "class": "boolean",
      "optional": true,
      "default": false,
      "help": "Regenie doesn't support missing covariates; enable this option to automatically drop samples from the analysis which have any missing covariates."
    },
    {
      "name": "auto_qc",
      "label": "Automatic step 1 QC",
      "class": "boolean",
      "optional": true,
      "default": true,
      "help": "Run plink to select suitable variants to extract for regenie step 1"
    },
    {
      "name": "block_size",
      "label": "Genotype block size",
      "class": "int",
      "optional": true,
      "default": 1000,
      "help": "Size of genotype blocks for regenie"
    },
    {
      "name": "flag_loocv",
      "label": "LOOCV",
      "class": "boolean",
      "optional": true,
      "default": true,
      "help": "Use leave-one-out cross validation"
    },
    {
      "name": "flag_bt",
      "label": "Binary traits",
      "class": "boolean",
      "optional": true,
      "default": true,
      "help": "Treat phenotypes as binary instead of quantitative"
    },
    {
      "name": "flag_lowmem",
      "label": "Low memory",
      "class": "boolean",
      "optional": true,
      "default": true,
      "help": "Write level 0 predictions to temporary files; reduces memory usage, but increases run-time and VM storage requirements"
    },
    {
      "name": "max_iter",
      "label": "Max iterations",
      "class": "int",
      "optional": true,
      "help": "Maximum number of iterations for logistic regression"
    },
    {
      "name": "firth_limit",
      "label": "(Optional) Firth correction",
      "class": "float",
      "optional": true,
      "help": "Use Firth correction for p-values less than this threshold; if blank, do not use Firth correction"
    },
    {
      "name": "flag_firth_approx",
      "label": "Firth approximation",
      "class": "boolean",
      "optional": true,
      "default": true,
      "help": "When using Firth correction, use approximation for computational speedup"
    },
    {
      "name": "min_mac",
      "label": "Minimum minor allele count",
      "class": "float",
      "optional": true,
      "help": "Variants with a lower minor allele count will be ignored"
    },
    {
      "name": "extra_options_1",
      "label": "(Optional) Extra command-line option(s) for step 1",
      "class": "string",
      "optional": true,
      "help": "Any additional command-line options to pass directly to the regenie program during step 1"
    },
    {
      "name": "extra_options_2",
      "label": "(Optional) Extra command-line option(s) for step 2",
      "class": "string",
      "optional": true,
      "help": "Any additional command-line options to pass directly to the regenie program during step 2"
    }
  ],
  "outputSpec": [
    {
      "name": "dropped_samples",
      "label": "(Optional) Dropped samples",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.sample"
      ],
      "help": "List of samples that were dropped from the analysis due to missing covariates"
    },
    {
      "name": "output_log_1",
      "label": "Step 1 log file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.log"
      ],
      "help": "Regenie log file from step 1"
    },
    {
      "name": "output_pred",
      "label": "(Optional) Predictions archive",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.tar.gz"
      ],
      "help": "Output predictions .tar.gz archive generated by step 1"
    },
    {
      "name": "output_log_2",
      "label": "Step 2 log file",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.log"
      ],
      "help": "Regenie log file from step 2"
    },
    {
      "name": "output_regenie",
      "label": "(Optional) Regenie output",
      "class": "file",
      "optional": true,
      "patterns": [
        "*.regenie"
      ],
      "help": "Output results .regenie data file generatd by step 2"
    }
  ],
  "runSpec": {
    "timeoutPolicy": {
      "*": {
        "hours": 48
      }
    },
    "interpreter": "bash",
    "release": "16.04",
    "distribution": "Ubuntu",
    "file": "src/regenie.sh",
    "version": "1"
  }
}
